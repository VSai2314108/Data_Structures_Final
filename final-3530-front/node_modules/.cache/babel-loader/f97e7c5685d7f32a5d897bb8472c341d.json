{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nfunction Car(props) {\n  _s();\n\n  const myVals = props.data;\n  const [final, setFinal] = useState([]);\n  console.log(myVals);\n\n  for (let i = 0; i < myVals.length; i++) {\n    if (myVals[i].Variable === 'Make') {\n      let newVal = myVals[i].Value.toString();\n      let list = [...final, newVal];\n      setFinal(list);\n      console.log(final);\n    } else if (myVals[i].Variable === 'Model') {\n      let newVal = myVals[i].Value.toString();\n      let list = [...final, newVal];\n      setFinal(list);\n    }\n  }\n\n  return final;\n}\n\n_s(Car, \"yzYVxRjMsGku8DS13+2gsAXH3bI=\");\n\n_c = Car;\nexport default Car;\n\nvar _c;\n\n$RefreshReg$(_c, \"Car\");","map":{"version":3,"sources":["/Users/vsai23/Workspace/final_cop3530/src/components/carInfo.js"],"names":["useState","Car","props","myVals","data","final","setFinal","console","log","i","length","Variable","newVal","Value","toString","list"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AACA,SAASC,GAAT,CAAaC,KAAb,EAAmB;AAAA;;AACf,QAAMC,MAAM,GAAGD,KAAK,CAACE,IAArB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;;AACA,OAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,MAAM,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,QAAGN,MAAM,CAACM,CAAD,CAAN,CAAUE,QAAV,KAAsB,MAAzB,EAAgC;AAC5B,UAAIC,MAAM,GAAIT,MAAM,CAACM,CAAD,CAAN,CAAUI,KAAX,CAAkBC,QAAlB,EAAb;AACA,UAAIC,IAAI,GAAG,CAAC,GAAGV,KAAJ,EAAUO,MAAV,CAAX;AACAN,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH,KALD,MAMK,IAAGF,MAAM,CAACM,CAAD,CAAN,CAAUE,QAAV,KAAsB,OAAzB,EACL;AACI,UAAIC,MAAM,GAAIT,MAAM,CAACM,CAAD,CAAN,CAAUI,KAAX,CAAkBC,QAAlB,EAAb;AACA,UAAIC,IAAI,GAAG,CAAC,GAAGV,KAAJ,EAAUO,MAAV,CAAX;AACAN,MAAAA,QAAQ,CAACS,IAAD,CAAR;AACH;AACJ;;AACD,SAAOV,KAAP;AAEH;;GApBQJ,G;;KAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nfunction Car(props){\n    const myVals = props.data;\n    const [final, setFinal] = useState([]);\n    console.log(myVals);\n    for(let i = 0; i < myVals.length; i++){\n        if(myVals[i].Variable=== 'Make'){\n            let newVal = (myVals[i].Value).toString();\n            let list = [...final,newVal];\n            setFinal(list);\n            console.log(final);\n        }\n        else if(myVals[i].Variable=== 'Model')\n        {\n            let newVal = (myVals[i].Value).toString();\n            let list = [...final,newVal];\n            setFinal(list);\n        }\n    }\n    return(final);\n\n}\nexport default Car;"]},"metadata":{},"sourceType":"module"}