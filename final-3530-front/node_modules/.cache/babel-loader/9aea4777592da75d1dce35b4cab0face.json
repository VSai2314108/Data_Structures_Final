{"ast":null,"code":"import axios from 'axios';\nlet userValue = '';\nlet data = ':)';\naxios.defaults.baseURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVinValues/';\n\nconst getIN = event => {\n  userValue = event.target.value;\n  console.log(userValue);\n};\n\nconst sub = event => {\n  axios({\n    method: 'get',\n    url: userValue + 'format=json',\n    format: 'json',\n    data: userValue\n  }).then(res => {\n    data = JSON.stringify(res, '', 2);\n  }).catch(err => console.error(err));\n  alert(data);\n};\n\nexport { getIN, sub };","map":{"version":3,"sources":["/Users/vsai23/Workspace/final_cop3530/src/components/vinread.js"],"names":["axios","userValue","data","defaults","baseURL","getIN","event","target","value","console","log","sub","method","url","format","then","res","JSON","stringify","catch","err","error","alert"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAIC,SAAS,GAAG,EAAhB;AACA,IAAIC,IAAI,GAAG,IAAX;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,0DAAzB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAS;AACnBL,EAAAA,SAAS,GAAGK,KAAK,CAACC,MAAN,CAAaC,KAAzB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACH,CAHD;;AAKA,MAAMU,GAAG,GAAIL,KAAD,IAAS;AACjBN,EAAAA,KAAK,CAAC;AACFY,IAAAA,MAAM,EAAE,KADN;AAEFC,IAAAA,GAAG,EAAEZ,SAAS,GAAC,aAFb;AAGFa,IAAAA,MAAM,EAAE,MAHN;AAIFZ,IAAAA,IAAI,EAAED;AAJJ,GAAD,CAAL,CAMGc,IANH,CAMQC,GAAG,IAAG;AAACd,IAAAA,IAAI,GAAIe,IAAI,CAACC,SAAL,CAAeF,GAAf,EAAoB,EAApB,EAAwB,CAAxB,CAAR;AAAoC,GANnD,EAOGG,KAPH,CAOSC,GAAG,IAAIX,OAAO,CAACY,KAAR,CAAcD,GAAd,CAPhB;AAQAE,EAAAA,KAAK,CAACpB,IAAD,CAAL;AACH,CAVD;;AAWA,SAAQG,KAAR,EAAeM,GAAf","sourcesContent":["import axios from 'axios';\nlet userValue = '';\nlet data = ':)';\naxios.defaults.baseURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/DecodeVinValues/';\n\nconst getIN = (event)=>{\n    userValue = event.target.value;\n    console.log(userValue);\n}\n\nconst sub = (event)=>{\n    axios({\n        method: 'get',\n        url: userValue+'format=json',\n        format: 'json',\n        data: userValue\n      })\n      .then(res=> {data = (JSON.stringify(res, '', 2))})\n      .catch(err => console.error(err));\n    alert(data);\n}\nexport {getIN, sub};"]},"metadata":{},"sourceType":"module"}